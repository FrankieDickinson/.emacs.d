;; Enable Basic Syntax Highlighting
(global-font-lock-mode 1)

;; Using Evil Mode
(require 'package)
  (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
  (package-initialize)

(require 'evil)
(evil-mode 1)


;; Line Numbers 
(global-linum-mode t)

;; Stock state variables 
(which-function-mode 1)

;; Emacs frame size
(setq initial-frame-alist
      '(
        (width . 160) ; character
        (height . 60) ; lines
        ))

;; default/sebsequent window
(setq default-frame-alist
      '(
        (width . 158) ; character
        (height . 58) ; lines
        ))

;; Shows which function the point is in
(show-paren-mode 1)

;; Highlight piars of parenthesis
(electric-pair-mode 1)

;; Emacs uses tabs by default sets it to spaces
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)

;; Disable Emacs start up screen
(setq inhibit-splash-screen t)
(setq inhibit-startup-message t)

;; IDO
(require 'ido)
(ido-mode t)

;; Emacs compile window split to the vertical
(defadvice compile (around split-horizontally activate)
  (let ((split-width-threshold 0)
        (split-height-threshold nil))
    ad-do-it))

;; Set Shortcut to compile with makefile
(global-set-key (kbd "M-m")'compile)

;; Disable Bell Noise
(setq visible-bell 1)

;; Hiding GUI Menus
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)

;; CC mode for C,C++ and Java 
(setq-default c-basic-offset 2)
;; Set CC mode brace style
(setq c-default-style "bsd")
(setq c-basic-offset 4)
(setq electric-layout-rules '((?\{ . around) (?\} . around)))
;; Allow Packages from ELPA and MELPA
(require 'package) ;; You might already have this line
 (add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize) ;; You might already have this line

;; Color theme

(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
(load-theme 'dracula t)

;; Setting Up Org mode
(require 'org)
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)

;; Emacs set font
(set-default-font "DejaVu Sans Mono Book 12")

;; Emacs move between windows
(global-set-key (kbd "C-c C-b")  'windmove-left)
(global-set-key (kbd "C-c C-f") 'windmove-right)
(global-set-key (kbd "C-c C-p")    'windmove-up)
(global-set-key (kbd "C-c C-n")  'windmove-down)

;; Web-mode

(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))

;; Company-mode
(add-hook 'after-init-hook 'global-company-mode)

;; Js2-mode
  (add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
  (add-to-list 'auto-mode-alist '("\\.jsx?\\'" . js2-jsx-mode))
  (add-to-list 'interpreter-mode-alist '("node" . js2-jsx-mode))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (evil web-mode spacemacs-theme magit js2-mode dracula-theme company color-theme-sanityinc-tomorrow all-the-icons))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
